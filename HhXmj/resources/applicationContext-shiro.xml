<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/task 
						http://www.springframework.org/schema/task/spring-task.xsd
	">
	<!-- <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie"> -->
	<!-- <constructor-arg value="rememberMe" /> -->
	<!-- <property name="httpOnly" value="true" /> -->
	<!-- <property name="maxAge" value="2592000" />30天 -->
	<!-- </bean> -->
	<!-- 配置sessionManager Shiro的会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置全局会话超时时间，默认30分钟(1800000) -->
		<property name="globalSessionTimeout" value="1800000" />
		<!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true -->
		<property name="deleteInvalidSessions" value="true" />
		<!-- 会话验证器调度时间 -->
		<property name="sessionValidationInterval" value="1800000" />
		<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
		<property name="sessionIdCookie.name" value="jsid"/>
		<!-- jsessionId的path为 / 用于多个系统共享jsessionId   -->
		<property name="sessionIdCookie.path" value="/"/> 
		<!-- 定时检查失效的session -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<!-- 自定义sessionDAO继承AbstractSessionDAO -->
		<property name="sessionDAO" ref="shiroAbstractSessionDAO" />

	</bean>
	<!-- ================ Shiro start ================ -->
	<!-- DefaultSessionManager：DefaultSecurityManager使用的默认实现，用于JavaSE环境； -->
	<!-- ServletContainerSessionManager：DefaultWebSecurityManager使用的默认实现，用于Web环境，其直接使用Servlet容器的会话； -->
	<!-- DefaultWebSessionManager：用于Web环境的实现，可以替代ServletContainerSessionManager，自己维护着会话，直接废弃了Servlet容器的会话管理。 -->
	<!-- 項目自定义的Realm -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myShiroRealm" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- Shiro Filter -->
	<!-- 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->
	<!-- anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->
	<!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/sys/kj/login" /> 
		<property name="successUrl" value="/sys/login/index" />
		<property name="unauthorizedUrl" value="/pages/sys/login/unauthorized.jsp" />
		<!-- 写在数据库中 -->
		<property name="filterChainDefinitions" value="#{authService.loadFilterChainDefinitions()}" />
		<!-- 写在配置中 -->
		<!-- <property name="filterChainDefinitions"> -->
		<!-- <value> -->
		<!-- /dist/** = anon -->
		<!-- /bootstrap/** = anon -->
		<!-- /plugins/** = anon -->

		<!-- /sys/login/** = anon -->
		<!-- /demo/** = anon -->
		<!-- /pages/sys/login/** = anon -->

		<!-- 用户管理 -->
		<!-- /sys/user/save = authc,perms[sysUser:save] 子节点 -->
		<!-- /sys/user/del = authc,perms[sysUser:del] 子节点 -->
		<!-- /sys/user/edit = authc,perms[sysUser:edit] 子节点 -->
		<!-- /sys/user/** = authc,perms[sysUser:all] 父节点 -->
		<!-- /pages/sys/user/** = authc,perms[sysUser:pages] 子节点 -->

		<!-- /** = authc -->
		<!-- noSessionCreation不创建会话拦截器,调用 subject.getSession(false)不会有什么问题,但是如果 
			subject.getSession(true)将抛出 DisabledSessionException异常 -->
		<!-- </value> -->
		<!-- </property> -->
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行,Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />




	<!-- ================ Shiro end ================ -->
</beans>
